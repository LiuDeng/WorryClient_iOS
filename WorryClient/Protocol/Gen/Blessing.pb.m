// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "Blessing.pb.h"
// @@protoc_insertion_point(imports)

@implementation BlessingRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [BlessingRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [UserRoot registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface PBBlessing ()
@property (strong) NSString* blessingId;
@property (strong) PBUser* creatUser;
@property (strong) PBUser* toUser;
@property (strong) NSString* text;
@property (strong) NSMutableArray * imagesArray;
@property SInt32 createdAt;
@property SInt32 updatedAt;
@end

@implementation PBBlessing

- (BOOL) hasBlessingId {
  return !!hasBlessingId_;
}
- (void) setHasBlessingId:(BOOL) _value_ {
  hasBlessingId_ = !!_value_;
}
@synthesize blessingId;
- (BOOL) hasCreatUser {
  return !!hasCreatUser_;
}
- (void) setHasCreatUser:(BOOL) _value_ {
  hasCreatUser_ = !!_value_;
}
@synthesize creatUser;
- (BOOL) hasToUser {
  return !!hasToUser_;
}
- (void) setHasToUser:(BOOL) _value_ {
  hasToUser_ = !!_value_;
}
@synthesize toUser;
- (BOOL) hasText {
  return !!hasText_;
}
- (void) setHasText:(BOOL) _value_ {
  hasText_ = !!_value_;
}
@synthesize text;
@synthesize imagesArray;
@dynamic images;
- (BOOL) hasCreatedAt {
  return !!hasCreatedAt_;
}
- (void) setHasCreatedAt:(BOOL) _value_ {
  hasCreatedAt_ = !!_value_;
}
@synthesize createdAt;
- (BOOL) hasUpdatedAt {
  return !!hasUpdatedAt_;
}
- (void) setHasUpdatedAt:(BOOL) _value_ {
  hasUpdatedAt_ = !!_value_;
}
@synthesize updatedAt;
- (instancetype) init {
  if ((self = [super init])) {
    self.blessingId = @"";
    self.creatUser = [PBUser defaultInstance];
    self.toUser = [PBUser defaultInstance];
    self.text = @"";
    self.createdAt = 0;
    self.updatedAt = 0;
  }
  return self;
}
static PBBlessing* defaultPBBlessingInstance = nil;
+ (void) initialize {
  if (self == [PBBlessing class]) {
    defaultPBBlessingInstance = [[PBBlessing alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultPBBlessingInstance;
}
- (instancetype) defaultInstance {
  return defaultPBBlessingInstance;
}
- (NSArray *)images {
  return imagesArray;
}
- (NSString*)imagesAtIndex:(NSUInteger)index {
  return [imagesArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (self.hasCreatUser) {
    if (!self.creatUser.isInitialized) {
      return NO;
    }
  }
  if (self.hasToUser) {
    if (!self.toUser.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasBlessingId) {
    [output writeString:1 value:self.blessingId];
  }
  if (self.hasCreatUser) {
    [output writeMessage:2 value:self.creatUser];
  }
  if (self.hasToUser) {
    [output writeMessage:3 value:self.toUser];
  }
  if (self.hasText) {
    [output writeString:10 value:self.text];
  }
  [self.imagesArray enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
    [output writeString:11 value:element];
  }];
  if (self.hasCreatedAt) {
    [output writeInt32:40 value:self.createdAt];
  }
  if (self.hasUpdatedAt) {
    [output writeInt32:41 value:self.updatedAt];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasBlessingId) {
    size_ += computeStringSize(1, self.blessingId);
  }
  if (self.hasCreatUser) {
    size_ += computeMessageSize(2, self.creatUser);
  }
  if (self.hasToUser) {
    size_ += computeMessageSize(3, self.toUser);
  }
  if (self.hasText) {
    size_ += computeStringSize(10, self.text);
  }
  {
    __block SInt32 dataSize = 0;
    const NSUInteger count = self.imagesArray.count;
    [self.imagesArray enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
      dataSize += computeStringSizeNoTag(element);
    }];
    size_ += dataSize;
    size_ += (SInt32)(1 * count);
  }
  if (self.hasCreatedAt) {
    size_ += computeInt32Size(40, self.createdAt);
  }
  if (self.hasUpdatedAt) {
    size_ += computeInt32Size(41, self.updatedAt);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PBBlessing*) parseFromData:(NSData*) data {
  return (PBBlessing*)[[[PBBlessing builder] mergeFromData:data] build];
}
+ (PBBlessing*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBBlessing*)[[[PBBlessing builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PBBlessing*) parseFromInputStream:(NSInputStream*) input {
  return (PBBlessing*)[[[PBBlessing builder] mergeFromInputStream:input] build];
}
+ (PBBlessing*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBBlessing*)[[[PBBlessing builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBBlessing*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PBBlessing*)[[[PBBlessing builder] mergeFromCodedInputStream:input] build];
}
+ (PBBlessing*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBBlessing*)[[[PBBlessing builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBBlessingBuilder*) builder {
  return [[PBBlessingBuilder alloc] init];
}
+ (PBBlessingBuilder*) builderWithPrototype:(PBBlessing*) prototype {
  return [[PBBlessing builder] mergeFrom:prototype];
}
- (PBBlessingBuilder*) builder {
  return [PBBlessing builder];
}
- (PBBlessingBuilder*) toBuilder {
  return [PBBlessing builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasBlessingId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"blessingId", self.blessingId];
  }
  if (self.hasCreatUser) {
    [output appendFormat:@"%@%@ {\n", indent, @"creatUser"];
    [self.creatUser writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasToUser) {
    [output appendFormat:@"%@%@ {\n", indent, @"toUser"];
    [self.toUser writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasText) {
    [output appendFormat:@"%@%@: %@\n", indent, @"text", self.text];
  }
  [self.imagesArray enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@: %@\n", indent, @"images", obj];
  }];
  if (self.hasCreatedAt) {
    [output appendFormat:@"%@%@: %@\n", indent, @"createdAt", [NSNumber numberWithInteger:self.createdAt]];
  }
  if (self.hasUpdatedAt) {
    [output appendFormat:@"%@%@: %@\n", indent, @"updatedAt", [NSNumber numberWithInteger:self.updatedAt]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PBBlessing class]]) {
    return NO;
  }
  PBBlessing *otherMessage = other;
  return
      self.hasBlessingId == otherMessage.hasBlessingId &&
      (!self.hasBlessingId || [self.blessingId isEqual:otherMessage.blessingId]) &&
      self.hasCreatUser == otherMessage.hasCreatUser &&
      (!self.hasCreatUser || [self.creatUser isEqual:otherMessage.creatUser]) &&
      self.hasToUser == otherMessage.hasToUser &&
      (!self.hasToUser || [self.toUser isEqual:otherMessage.toUser]) &&
      self.hasText == otherMessage.hasText &&
      (!self.hasText || [self.text isEqual:otherMessage.text]) &&
      [self.imagesArray isEqualToArray:otherMessage.imagesArray] &&
      self.hasCreatedAt == otherMessage.hasCreatedAt &&
      (!self.hasCreatedAt || self.createdAt == otherMessage.createdAt) &&
      self.hasUpdatedAt == otherMessage.hasUpdatedAt &&
      (!self.hasUpdatedAt || self.updatedAt == otherMessage.updatedAt) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasBlessingId) {
    hashCode = hashCode * 31 + [self.blessingId hash];
  }
  if (self.hasCreatUser) {
    hashCode = hashCode * 31 + [self.creatUser hash];
  }
  if (self.hasToUser) {
    hashCode = hashCode * 31 + [self.toUser hash];
  }
  if (self.hasText) {
    hashCode = hashCode * 31 + [self.text hash];
  }
  [self.imagesArray enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasCreatedAt) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.createdAt] hash];
  }
  if (self.hasUpdatedAt) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.updatedAt] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PBBlessingBuilder()
@property (strong) PBBlessing* resultPbblessing;
@end

@implementation PBBlessingBuilder
@synthesize resultPbblessing;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultPbblessing = [[PBBlessing alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultPbblessing;
}
- (PBBlessingBuilder*) clear {
  self.resultPbblessing = [[PBBlessing alloc] init];
  return self;
}
- (PBBlessingBuilder*) clone {
  return [PBBlessing builderWithPrototype:resultPbblessing];
}
- (PBBlessing*) defaultInstance {
  return [PBBlessing defaultInstance];
}
- (PBBlessing*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PBBlessing*) buildPartial {
  PBBlessing* returnMe = resultPbblessing;
  self.resultPbblessing = nil;
  return returnMe;
}
- (PBBlessingBuilder*) mergeFrom:(PBBlessing*) other {
  if (other == [PBBlessing defaultInstance]) {
    return self;
  }
  if (other.hasBlessingId) {
    [self setBlessingId:other.blessingId];
  }
  if (other.hasCreatUser) {
    [self mergeCreatUser:other.creatUser];
  }
  if (other.hasToUser) {
    [self mergeToUser:other.toUser];
  }
  if (other.hasText) {
    [self setText:other.text];
  }
  if (other.imagesArray.count > 0) {
    if (resultPbblessing.imagesArray == nil) {
      resultPbblessing.imagesArray = [[NSMutableArray alloc] initWithArray:other.imagesArray];
    } else {
      [resultPbblessing.imagesArray addObjectsFromArray:other.imagesArray];
    }
  }
  if (other.hasCreatedAt) {
    [self setCreatedAt:other.createdAt];
  }
  if (other.hasUpdatedAt) {
    [self setUpdatedAt:other.updatedAt];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PBBlessingBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PBBlessingBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setBlessingId:[input readString]];
        break;
      }
      case 18: {
        PBUserBuilder* subBuilder = [PBUser builder];
        if (self.hasCreatUser) {
          [subBuilder mergeFrom:self.creatUser];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setCreatUser:[subBuilder buildPartial]];
        break;
      }
      case 26: {
        PBUserBuilder* subBuilder = [PBUser builder];
        if (self.hasToUser) {
          [subBuilder mergeFrom:self.toUser];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setToUser:[subBuilder buildPartial]];
        break;
      }
      case 82: {
        [self setText:[input readString]];
        break;
      }
      case 90: {
        [self addImages:[input readString]];
        break;
      }
      case 320: {
        [self setCreatedAt:[input readInt32]];
        break;
      }
      case 328: {
        [self setUpdatedAt:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasBlessingId {
  return resultPbblessing.hasBlessingId;
}
- (NSString*) blessingId {
  return resultPbblessing.blessingId;
}
- (PBBlessingBuilder*) setBlessingId:(NSString*) value {
  resultPbblessing.hasBlessingId = YES;
  resultPbblessing.blessingId = value;
  return self;
}
- (PBBlessingBuilder*) clearBlessingId {
  resultPbblessing.hasBlessingId = NO;
  resultPbblessing.blessingId = @"";
  return self;
}
- (BOOL) hasCreatUser {
  return resultPbblessing.hasCreatUser;
}
- (PBUser*) creatUser {
  return resultPbblessing.creatUser;
}
- (PBBlessingBuilder*) setCreatUser:(PBUser*) value {
  resultPbblessing.hasCreatUser = YES;
  resultPbblessing.creatUser = value;
  return self;
}
- (PBBlessingBuilder*) setCreatUserBuilder:(PBUserBuilder*) builderForValue {
  return [self setCreatUser:[builderForValue build]];
}
- (PBBlessingBuilder*) mergeCreatUser:(PBUser*) value {
  if (resultPbblessing.hasCreatUser &&
      resultPbblessing.creatUser != [PBUser defaultInstance]) {
    resultPbblessing.creatUser =
      [[[PBUser builderWithPrototype:resultPbblessing.creatUser] mergeFrom:value] buildPartial];
  } else {
    resultPbblessing.creatUser = value;
  }
  resultPbblessing.hasCreatUser = YES;
  return self;
}
- (PBBlessingBuilder*) clearCreatUser {
  resultPbblessing.hasCreatUser = NO;
  resultPbblessing.creatUser = [PBUser defaultInstance];
  return self;
}
- (BOOL) hasToUser {
  return resultPbblessing.hasToUser;
}
- (PBUser*) toUser {
  return resultPbblessing.toUser;
}
- (PBBlessingBuilder*) setToUser:(PBUser*) value {
  resultPbblessing.hasToUser = YES;
  resultPbblessing.toUser = value;
  return self;
}
- (PBBlessingBuilder*) setToUserBuilder:(PBUserBuilder*) builderForValue {
  return [self setToUser:[builderForValue build]];
}
- (PBBlessingBuilder*) mergeToUser:(PBUser*) value {
  if (resultPbblessing.hasToUser &&
      resultPbblessing.toUser != [PBUser defaultInstance]) {
    resultPbblessing.toUser =
      [[[PBUser builderWithPrototype:resultPbblessing.toUser] mergeFrom:value] buildPartial];
  } else {
    resultPbblessing.toUser = value;
  }
  resultPbblessing.hasToUser = YES;
  return self;
}
- (PBBlessingBuilder*) clearToUser {
  resultPbblessing.hasToUser = NO;
  resultPbblessing.toUser = [PBUser defaultInstance];
  return self;
}
- (BOOL) hasText {
  return resultPbblessing.hasText;
}
- (NSString*) text {
  return resultPbblessing.text;
}
- (PBBlessingBuilder*) setText:(NSString*) value {
  resultPbblessing.hasText = YES;
  resultPbblessing.text = value;
  return self;
}
- (PBBlessingBuilder*) clearText {
  resultPbblessing.hasText = NO;
  resultPbblessing.text = @"";
  return self;
}
- (NSMutableArray *)images {
  return resultPbblessing.imagesArray;
}
- (NSString*)imagesAtIndex:(NSUInteger)index {
  return [resultPbblessing imagesAtIndex:index];
}
- (PBBlessingBuilder *)addImages:(NSString*)value {
  if (resultPbblessing.imagesArray == nil) {
    resultPbblessing.imagesArray = [[NSMutableArray alloc]init];
  }
  [resultPbblessing.imagesArray addObject:value];
  return self;
}
- (PBBlessingBuilder *)setImagesArray:(NSArray *)array {
  resultPbblessing.imagesArray = [[NSMutableArray alloc] initWithArray:array];
  return self;
}
- (PBBlessingBuilder *)clearImages {
  resultPbblessing.imagesArray = nil;
  return self;
}
- (BOOL) hasCreatedAt {
  return resultPbblessing.hasCreatedAt;
}
- (SInt32) createdAt {
  return resultPbblessing.createdAt;
}
- (PBBlessingBuilder*) setCreatedAt:(SInt32) value {
  resultPbblessing.hasCreatedAt = YES;
  resultPbblessing.createdAt = value;
  return self;
}
- (PBBlessingBuilder*) clearCreatedAt {
  resultPbblessing.hasCreatedAt = NO;
  resultPbblessing.createdAt = 0;
  return self;
}
- (BOOL) hasUpdatedAt {
  return resultPbblessing.hasUpdatedAt;
}
- (SInt32) updatedAt {
  return resultPbblessing.updatedAt;
}
- (PBBlessingBuilder*) setUpdatedAt:(SInt32) value {
  resultPbblessing.hasUpdatedAt = YES;
  resultPbblessing.updatedAt = value;
  return self;
}
- (PBBlessingBuilder*) clearUpdatedAt {
  resultPbblessing.hasUpdatedAt = NO;
  resultPbblessing.updatedAt = 0;
  return self;
}
@end


// @@protoc_insertion_point(global_scope)
