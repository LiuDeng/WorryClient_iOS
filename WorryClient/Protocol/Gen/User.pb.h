// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import <ProtocolBuffers/ProtocolBuffers.h>

// @@protoc_insertion_point(imports)

@class PBUser;
@class PBUserBuilder;
#ifndef __has_feature
  #define __has_feature(x) 0 // Compatibility with non-clang compilers.
#endif // __has_feature

#ifndef NS_RETURNS_NOT_RETAINED
  #if __has_feature(attribute_ns_returns_not_retained)
    #define NS_RETURNS_NOT_RETAINED __attribute__((ns_returns_not_retained))
  #else
    #define NS_RETURNS_NOT_RETAINED
  #endif
#endif

typedef NS_ENUM(SInt32, PBSignUpAndLogInType) {
  PBSignUpAndLogInTypePhone = 1,
  PBSignUpAndLogInTypeEmail = 2,
};

BOOL PBSignUpAndLogInTypeIsValidValue(PBSignUpAndLogInType value);
NSString *NSStringFromPBSignUpAndLogInType(PBSignUpAndLogInType value);


@interface UserRoot : NSObject {
}
+ (PBExtensionRegistry*) extensionRegistry;
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry;
@end

@interface PBUser : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasGender_:1;
  BOOL hasDate_:1;
  BOOL hasUserId_:1;
  BOOL hasPassword_:1;
  BOOL hasNick_:1;
  BOOL hasUserName_:1;
  BOOL hasPhone_:1;
  BOOL hasEmail_:1;
  BOOL gender_:1;
  SInt32 date;
  NSString* userId;
  NSString* password;
  NSString* nick;
  NSString* userName;
  NSString* phone;
  NSString* email;
}
- (BOOL) hasUserId;
- (BOOL) hasPassword;
- (BOOL) hasNick;
- (BOOL) hasGender;
- (BOOL) hasUserName;
- (BOOL) hasPhone;
- (BOOL) hasEmail;
- (BOOL) hasDate;
@property (readonly, strong) NSString* userId;
@property (readonly, strong) NSString* password;
@property (readonly, strong) NSString* nick;
- (BOOL) gender;
@property (readonly, strong) NSString* userName;
@property (readonly, strong) NSString* phone;
@property (readonly, strong) NSString* email;
@property (readonly) SInt32 date;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PBUserBuilder*) builder;
+ (PBUserBuilder*) builder;
+ (PBUserBuilder*) builderWithPrototype:(PBUser*) prototype;
- (PBUserBuilder*) toBuilder;

+ (PBUser*) parseFromData:(NSData*) data;
+ (PBUser*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBUser*) parseFromInputStream:(NSInputStream*) input;
+ (PBUser*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PBUser*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PBUser*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PBUserBuilder : PBGeneratedMessageBuilder {
@private
  PBUser* resultPbuser;
}

- (PBUser*) defaultInstance;

- (PBUserBuilder*) clear;
- (PBUserBuilder*) clone;

- (PBUser*) build;
- (PBUser*) buildPartial;

- (PBUserBuilder*) mergeFrom:(PBUser*) other;
- (PBUserBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PBUserBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasUserId;
- (NSString*) userId;
- (PBUserBuilder*) setUserId:(NSString*) value;
- (PBUserBuilder*) clearUserId;

- (BOOL) hasPassword;
- (NSString*) password;
- (PBUserBuilder*) setPassword:(NSString*) value;
- (PBUserBuilder*) clearPassword;

- (BOOL) hasNick;
- (NSString*) nick;
- (PBUserBuilder*) setNick:(NSString*) value;
- (PBUserBuilder*) clearNick;

- (BOOL) hasGender;
- (BOOL) gender;
- (PBUserBuilder*) setGender:(BOOL) value;
- (PBUserBuilder*) clearGender;

- (BOOL) hasUserName;
- (NSString*) userName;
- (PBUserBuilder*) setUserName:(NSString*) value;
- (PBUserBuilder*) clearUserName;

- (BOOL) hasPhone;
- (NSString*) phone;
- (PBUserBuilder*) setPhone:(NSString*) value;
- (PBUserBuilder*) clearPhone;

- (BOOL) hasEmail;
- (NSString*) email;
- (PBUserBuilder*) setEmail:(NSString*) value;
- (PBUserBuilder*) clearEmail;

- (BOOL) hasDate;
- (SInt32) date;
- (PBUserBuilder*) setDate:(SInt32) value;
- (PBUserBuilder*) clearDate;
@end


// @@protoc_insertion_point(global_scope)
