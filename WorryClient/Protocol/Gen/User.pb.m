// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "User.pb.h"
// @@protoc_insertion_point(imports)

@implementation UserRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [UserRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

BOOL PBSignUpAndLogInTypeIsValidValue(PBSignUpAndLogInType value) {
  switch (value) {
    case PBSignUpAndLogInTypePhone:
    case PBSignUpAndLogInTypeEmail:
      return YES;
    default:
      return NO;
  }
}
NSString *NSStringFromPBSignUpAndLogInType(PBSignUpAndLogInType value) {
  switch (value) {
    case PBSignUpAndLogInTypePhone:
      return @"PBSignUpAndLogInTypePhone";
    case PBSignUpAndLogInTypeEmail:
      return @"PBSignUpAndLogInTypeEmail";
    default:
      return nil;
  }
}

@interface PBUser ()
@property (strong) NSString* userName;
@property (strong) NSString* password;
@property (strong) NSString* nick;
@property BOOL gender;
@property (strong) NSString* phone;
@property (strong) NSString* email;
@property SInt32 date;
@end

@implementation PBUser

- (BOOL) hasUserName {
  return !!hasUserName_;
}
- (void) setHasUserName:(BOOL) _value_ {
  hasUserName_ = !!_value_;
}
@synthesize userName;
- (BOOL) hasPassword {
  return !!hasPassword_;
}
- (void) setHasPassword:(BOOL) _value_ {
  hasPassword_ = !!_value_;
}
@synthesize password;
- (BOOL) hasNick {
  return !!hasNick_;
}
- (void) setHasNick:(BOOL) _value_ {
  hasNick_ = !!_value_;
}
@synthesize nick;
- (BOOL) hasGender {
  return !!hasGender_;
}
- (void) setHasGender:(BOOL) _value_ {
  hasGender_ = !!_value_;
}
- (BOOL) gender {
  return !!gender_;
}
- (void) setGender:(BOOL) _value_ {
  gender_ = !!_value_;
}
- (BOOL) hasPhone {
  return !!hasPhone_;
}
- (void) setHasPhone:(BOOL) _value_ {
  hasPhone_ = !!_value_;
}
@synthesize phone;
- (BOOL) hasEmail {
  return !!hasEmail_;
}
- (void) setHasEmail:(BOOL) _value_ {
  hasEmail_ = !!_value_;
}
@synthesize email;
- (BOOL) hasDate {
  return !!hasDate_;
}
- (void) setHasDate:(BOOL) _value_ {
  hasDate_ = !!_value_;
}
@synthesize date;
- (instancetype) init {
  if ((self = [super init])) {
    self.userName = @"";
    self.password = @"";
    self.nick = @"";
    self.gender = NO;
    self.phone = @"";
    self.email = @"";
    self.date = 0;
  }
  return self;
}
static PBUser* defaultPBUserInstance = nil;
+ (void) initialize {
  if (self == [PBUser class]) {
    defaultPBUserInstance = [[PBUser alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultPBUserInstance;
}
- (instancetype) defaultInstance {
  return defaultPBUserInstance;
}
- (BOOL) isInitialized {
  if (!self.hasUserName) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUserName) {
    [output writeString:1 value:self.userName];
  }
  if (self.hasPassword) {
    [output writeString:2 value:self.password];
  }
  if (self.hasNick) {
    [output writeString:3 value:self.nick];
  }
  if (self.hasGender) {
    [output writeBool:5 value:self.gender];
  }
  if (self.hasPhone) {
    [output writeString:10 value:self.phone];
  }
  if (self.hasEmail) {
    [output writeString:11 value:self.email];
  }
  if (self.hasDate) {
    [output writeInt32:12 value:self.date];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUserName) {
    size_ += computeStringSize(1, self.userName);
  }
  if (self.hasPassword) {
    size_ += computeStringSize(2, self.password);
  }
  if (self.hasNick) {
    size_ += computeStringSize(3, self.nick);
  }
  if (self.hasGender) {
    size_ += computeBoolSize(5, self.gender);
  }
  if (self.hasPhone) {
    size_ += computeStringSize(10, self.phone);
  }
  if (self.hasEmail) {
    size_ += computeStringSize(11, self.email);
  }
  if (self.hasDate) {
    size_ += computeInt32Size(12, self.date);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PBUser*) parseFromData:(NSData*) data {
  return (PBUser*)[[[PBUser builder] mergeFromData:data] build];
}
+ (PBUser*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBUser*)[[[PBUser builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PBUser*) parseFromInputStream:(NSInputStream*) input {
  return (PBUser*)[[[PBUser builder] mergeFromInputStream:input] build];
}
+ (PBUser*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBUser*)[[[PBUser builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBUser*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PBUser*)[[[PBUser builder] mergeFromCodedInputStream:input] build];
}
+ (PBUser*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PBUser*)[[[PBUser builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PBUserBuilder*) builder {
  return [[PBUserBuilder alloc] init];
}
+ (PBUserBuilder*) builderWithPrototype:(PBUser*) prototype {
  return [[PBUser builder] mergeFrom:prototype];
}
- (PBUserBuilder*) builder {
  return [PBUser builder];
}
- (PBUserBuilder*) toBuilder {
  return [PBUser builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUserName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userName", self.userName];
  }
  if (self.hasPassword) {
    [output appendFormat:@"%@%@: %@\n", indent, @"password", self.password];
  }
  if (self.hasNick) {
    [output appendFormat:@"%@%@: %@\n", indent, @"nick", self.nick];
  }
  if (self.hasGender) {
    [output appendFormat:@"%@%@: %@\n", indent, @"gender", [NSNumber numberWithBool:self.gender]];
  }
  if (self.hasPhone) {
    [output appendFormat:@"%@%@: %@\n", indent, @"phone", self.phone];
  }
  if (self.hasEmail) {
    [output appendFormat:@"%@%@: %@\n", indent, @"email", self.email];
  }
  if (self.hasDate) {
    [output appendFormat:@"%@%@: %@\n", indent, @"date", [NSNumber numberWithInteger:self.date]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PBUser class]]) {
    return NO;
  }
  PBUser *otherMessage = other;
  return
      self.hasUserName == otherMessage.hasUserName &&
      (!self.hasUserName || [self.userName isEqual:otherMessage.userName]) &&
      self.hasPassword == otherMessage.hasPassword &&
      (!self.hasPassword || [self.password isEqual:otherMessage.password]) &&
      self.hasNick == otherMessage.hasNick &&
      (!self.hasNick || [self.nick isEqual:otherMessage.nick]) &&
      self.hasGender == otherMessage.hasGender &&
      (!self.hasGender || self.gender == otherMessage.gender) &&
      self.hasPhone == otherMessage.hasPhone &&
      (!self.hasPhone || [self.phone isEqual:otherMessage.phone]) &&
      self.hasEmail == otherMessage.hasEmail &&
      (!self.hasEmail || [self.email isEqual:otherMessage.email]) &&
      self.hasDate == otherMessage.hasDate &&
      (!self.hasDate || self.date == otherMessage.date) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUserName) {
    hashCode = hashCode * 31 + [self.userName hash];
  }
  if (self.hasPassword) {
    hashCode = hashCode * 31 + [self.password hash];
  }
  if (self.hasNick) {
    hashCode = hashCode * 31 + [self.nick hash];
  }
  if (self.hasGender) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.gender] hash];
  }
  if (self.hasPhone) {
    hashCode = hashCode * 31 + [self.phone hash];
  }
  if (self.hasEmail) {
    hashCode = hashCode * 31 + [self.email hash];
  }
  if (self.hasDate) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.date] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PBUserBuilder()
@property (strong) PBUser* resultPbuser;
@end

@implementation PBUserBuilder
@synthesize resultPbuser;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultPbuser = [[PBUser alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultPbuser;
}
- (PBUserBuilder*) clear {
  self.resultPbuser = [[PBUser alloc] init];
  return self;
}
- (PBUserBuilder*) clone {
  return [PBUser builderWithPrototype:resultPbuser];
}
- (PBUser*) defaultInstance {
  return [PBUser defaultInstance];
}
- (PBUser*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PBUser*) buildPartial {
  PBUser* returnMe = resultPbuser;
  self.resultPbuser = nil;
  return returnMe;
}
- (PBUserBuilder*) mergeFrom:(PBUser*) other {
  if (other == [PBUser defaultInstance]) {
    return self;
  }
  if (other.hasUserName) {
    [self setUserName:other.userName];
  }
  if (other.hasPassword) {
    [self setPassword:other.password];
  }
  if (other.hasNick) {
    [self setNick:other.nick];
  }
  if (other.hasGender) {
    [self setGender:other.gender];
  }
  if (other.hasPhone) {
    [self setPhone:other.phone];
  }
  if (other.hasEmail) {
    [self setEmail:other.email];
  }
  if (other.hasDate) {
    [self setDate:other.date];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PBUserBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PBUserBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setUserName:[input readString]];
        break;
      }
      case 18: {
        [self setPassword:[input readString]];
        break;
      }
      case 26: {
        [self setNick:[input readString]];
        break;
      }
      case 40: {
        [self setGender:[input readBool]];
        break;
      }
      case 82: {
        [self setPhone:[input readString]];
        break;
      }
      case 90: {
        [self setEmail:[input readString]];
        break;
      }
      case 96: {
        [self setDate:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasUserName {
  return resultPbuser.hasUserName;
}
- (NSString*) userName {
  return resultPbuser.userName;
}
- (PBUserBuilder*) setUserName:(NSString*) value {
  resultPbuser.hasUserName = YES;
  resultPbuser.userName = value;
  return self;
}
- (PBUserBuilder*) clearUserName {
  resultPbuser.hasUserName = NO;
  resultPbuser.userName = @"";
  return self;
}
- (BOOL) hasPassword {
  return resultPbuser.hasPassword;
}
- (NSString*) password {
  return resultPbuser.password;
}
- (PBUserBuilder*) setPassword:(NSString*) value {
  resultPbuser.hasPassword = YES;
  resultPbuser.password = value;
  return self;
}
- (PBUserBuilder*) clearPassword {
  resultPbuser.hasPassword = NO;
  resultPbuser.password = @"";
  return self;
}
- (BOOL) hasNick {
  return resultPbuser.hasNick;
}
- (NSString*) nick {
  return resultPbuser.nick;
}
- (PBUserBuilder*) setNick:(NSString*) value {
  resultPbuser.hasNick = YES;
  resultPbuser.nick = value;
  return self;
}
- (PBUserBuilder*) clearNick {
  resultPbuser.hasNick = NO;
  resultPbuser.nick = @"";
  return self;
}
- (BOOL) hasGender {
  return resultPbuser.hasGender;
}
- (BOOL) gender {
  return resultPbuser.gender;
}
- (PBUserBuilder*) setGender:(BOOL) value {
  resultPbuser.hasGender = YES;
  resultPbuser.gender = value;
  return self;
}
- (PBUserBuilder*) clearGender {
  resultPbuser.hasGender = NO;
  resultPbuser.gender = NO;
  return self;
}
- (BOOL) hasPhone {
  return resultPbuser.hasPhone;
}
- (NSString*) phone {
  return resultPbuser.phone;
}
- (PBUserBuilder*) setPhone:(NSString*) value {
  resultPbuser.hasPhone = YES;
  resultPbuser.phone = value;
  return self;
}
- (PBUserBuilder*) clearPhone {
  resultPbuser.hasPhone = NO;
  resultPbuser.phone = @"";
  return self;
}
- (BOOL) hasEmail {
  return resultPbuser.hasEmail;
}
- (NSString*) email {
  return resultPbuser.email;
}
- (PBUserBuilder*) setEmail:(NSString*) value {
  resultPbuser.hasEmail = YES;
  resultPbuser.email = value;
  return self;
}
- (PBUserBuilder*) clearEmail {
  resultPbuser.hasEmail = NO;
  resultPbuser.email = @"";
  return self;
}
- (BOOL) hasDate {
  return resultPbuser.hasDate;
}
- (SInt32) date {
  return resultPbuser.date;
}
- (PBUserBuilder*) setDate:(SInt32) value {
  resultPbuser.hasDate = YES;
  resultPbuser.date = value;
  return self;
}
- (PBUserBuilder*) clearDate {
  resultPbuser.hasDate = NO;
  resultPbuser.date = 0;
  return self;
}
@end


// @@protoc_insertion_point(global_scope)
